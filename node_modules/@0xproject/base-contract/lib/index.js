"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var ethersContracts = require("ethers-contracts");
var _ = require("lodash");
var BaseContract = /** @class */ (function () {
    function BaseContract(web3Wrapper, abi, address) {
        this._web3Wrapper = web3Wrapper;
        this.abi = abi;
        this.address = address;
        this._ethersInterface = new ethersContracts.Interface(abi);
    }
    BaseContract._transformABIData = function (abis, values, transformation) {
        return _.map(values, function (value, i) {
            return BaseContract._transformTypedData(abis[i].type, value, transformation);
        });
    };
    BaseContract._lowercaseAddress = function (type, value) {
        return type === 'address' ? value.toLowerCase() : value;
    };
    BaseContract._bigNumberToString = function (type, value) {
        return _.isObject(value) && value.isBigNumber ? value.toString() : value;
    };
    BaseContract._transformTypedData = function (type, values, transformation) {
        var _this = this;
        var trailingArrayRegex = /\[\d*\]$/;
        if (type.match(trailingArrayRegex)) {
            var arrayItemType_1 = type.replace(trailingArrayRegex, '');
            return _.map(values, function (value) { return _this._transformTypedData(arrayItemType_1, value, transformation); });
        }
        else {
            return transformation(type, values);
        }
    };
    BaseContract.prototype._applyDefaultsToTxDataAsync = function (txData, estimateGasAsync) {
        return __awaiter(this, void 0, void 0, function () {
            var removeUndefinedProperties, txDataWithDefaults, estimatedGas;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        removeUndefinedProperties = _.pickBy;
                        txDataWithDefaults = __assign({ to: this.address }, removeUndefinedProperties(this._web3Wrapper.getContractDefaults()), removeUndefinedProperties(txData));
                        if (!(_.isUndefined(txDataWithDefaults.gas) && !_.isUndefined(estimateGasAsync))) return [3 /*break*/, 2];
                        return [4 /*yield*/, estimateGasAsync(txData)];
                    case 1:
                        estimatedGas = _a.sent();
                        txDataWithDefaults.gas = estimatedGas;
                        _a.label = 2;
                    case 2: return [2 /*return*/, txDataWithDefaults];
                }
            });
        });
    };
    return BaseContract;
}());
exports.BaseContract = BaseContract;
//# sourceMappingURL=index.js.map