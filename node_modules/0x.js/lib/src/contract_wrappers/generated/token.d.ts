/**
 * This file is auto-generated using abi-gen. Don't edit directly.
 * Templates can be found at https://github.com/0xProject/0x-monorepo/tree/development/packages/contract_templates.
 */
import { BaseContract } from '@0xproject/base-contract';
import { TxData } from '@0xproject/types';
import { BigNumber } from '@0xproject/utils';
import { Web3Wrapper } from '@0xproject/web3-wrapper';
import * as Web3 from 'web3';
export declare type TokenContractEventArgs = TransferContractEventArgs | ApprovalContractEventArgs;
export declare enum TokenEvents {
    Transfer = "Transfer",
    Approval = "Approval",
}
export interface TransferContractEventArgs {
    _from: string;
    _to: string;
    _value: BigNumber;
}
export interface ApprovalContractEventArgs {
    _owner: string;
    _spender: string;
    _value: BigNumber;
}
export declare class TokenContract extends BaseContract {
    approve: {
        sendTransactionAsync(_spender: string, _value: BigNumber, txData?: TxData): Promise<string>;
        estimateGasAsync(_spender: string, _value: BigNumber, txData?: TxData): Promise<number>;
        getABIEncodedTransactionData(_spender: string, _value: BigNumber, txData?: TxData): string;
        callAsync(_spender: string, _value: BigNumber, txData?: TxData, defaultBlock?: number | "pending" | "earliest" | "latest" | undefined): Promise<boolean>;
    };
    totalSupply: {
        callAsync(txData?: TxData, defaultBlock?: number | "pending" | "earliest" | "latest" | undefined): Promise<BigNumber>;
    };
    transferFrom: {
        sendTransactionAsync(_from: string, _to: string, _value: BigNumber, txData?: TxData): Promise<string>;
        estimateGasAsync(_from: string, _to: string, _value: BigNumber, txData?: TxData): Promise<number>;
        getABIEncodedTransactionData(_from: string, _to: string, _value: BigNumber, txData?: TxData): string;
        callAsync(_from: string, _to: string, _value: BigNumber, txData?: TxData, defaultBlock?: number | "pending" | "earliest" | "latest" | undefined): Promise<boolean>;
    };
    balanceOf: {
        callAsync(_owner: string, txData?: TxData, defaultBlock?: number | "pending" | "earliest" | "latest" | undefined): Promise<BigNumber>;
    };
    transfer: {
        sendTransactionAsync(_to: string, _value: BigNumber, txData?: TxData): Promise<string>;
        estimateGasAsync(_to: string, _value: BigNumber, txData?: TxData): Promise<number>;
        getABIEncodedTransactionData(_to: string, _value: BigNumber, txData?: TxData): string;
        callAsync(_to: string, _value: BigNumber, txData?: TxData, defaultBlock?: number | "pending" | "earliest" | "latest" | undefined): Promise<boolean>;
    };
    allowance: {
        callAsync(_owner: string, _spender: string, txData?: TxData, defaultBlock?: number | "pending" | "earliest" | "latest" | undefined): Promise<BigNumber>;
    };
    constructor(web3Wrapper: Web3Wrapper, abi: Web3.ContractAbi, address: string);
}
