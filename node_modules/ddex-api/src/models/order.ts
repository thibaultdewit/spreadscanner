import { ZeroEx, Order as ZeroExOrder } from "0x.js"
import { OrderJson, SrderStatus, Side } from "../types"
import { BigNumber } from "bignumber.js";

export class Order {
  public id: string
  public pair: string
  public status: SrderStatus
  public amount: BigNumber
  public price: BigNumber
  public fee: BigNumber
  public side: Side
  public account: string
  public createdAt: Date
  public availableAmount: BigNumber
  public pendingAmount: BigNumber
  public canceledAmount: BigNumber
  public confirmedAmount: BigNumber
  public json: ZeroExOrder

  static fromJSON(orderJson: OrderJson): Order {
    const order = new Order()

    order.id = orderJson.id
    order.pair = orderJson.pair
    order.status = orderJson.status
    order.account = orderJson.account

    if (orderJson.side === "sell") {
      order.side = Side.SELL
    } else if (orderJson.side === "buy") {
      order.side = Side.BUY
    }

    order.amount = new BigNumber(orderJson.amount)
    order.price = new BigNumber(orderJson.price)
    order.fee = new BigNumber(orderJson.fee)
    order.availableAmount = new BigNumber(orderJson.availableAmount)
    order.pendingAmount = new BigNumber(orderJson.pendingAmount)
    order.canceledAmount = new BigNumber(orderJson.canceledAmount)
    order.confirmedAmount = new BigNumber(orderJson.confirmedAmount)
    order.createdAt = new Date(orderJson.createdAt)

    order.json = {
      maker: orderJson.json.maker,
      taker: orderJson.json.taker,
      makerFee: new BigNumber(orderJson.json.makerFee),
      takerFee: new BigNumber(orderJson.json.takerFee),
      makerTokenAmount: new BigNumber(orderJson.json.makerTokenAmount),
      takerTokenAmount: new BigNumber(orderJson.json.takerTokenAmount),
      makerTokenAddress: orderJson.json.makerTokenAddress,
      takerTokenAddress: orderJson.json.takerTokenAddress,
      salt: ZeroEx.generatePseudoRandomSalt(), // gen a new salt to prevent hacker caculating the orderHash
      exchangeContractAddress: orderJson.json.exchangeContractAddress,
      feeRecipient: orderJson.json.feeRecipient,
      expirationUnixTimestampSec: new BigNumber(orderJson.json.expirationUnixTimestampSec)
    }

    return order
  }
}